{"version":3,"file":"static/js/785.0dd0937c.chunk.js","mappings":"gOAsCA,UAjCgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAiBR,OAhBAE,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,WAAyBJ,GAAzB,iGAE2BK,EAAAA,EAAAA,IAAmBL,GAF9C,OAEcM,EAFd,OAGQP,EAAYO,EAAKC,SAHzB,gDAKQL,QAAQC,IAAR,MALR,yDAFY,yBAAC,SAAD,2BAUZK,CAASR,EACV,GAAE,CAACA,IACJE,QAAQC,IAAIL,IAGV,0BACI,wBACCA,EAAQW,KAAI,gBAAET,EAAF,EAAEA,GAAIU,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACT,2BACI,qCAAcD,EAAd,QACA,uBAAIC,MAFCX,EADA,OASxB,C,mMClCDY,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAoB,mCAAG,WAAQC,GAAR,4FAAqBC,EAArB,+BAA4B,EAA5B,SAEXJ,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEE,EAAlE,iBAAsFC,EAAtF,yBAFW,WAE5BC,EAF4B,QAGrBX,KAAKY,cAHgB,yCAIzBC,QAAQC,OAAQ,IAAIC,MAAJ,6DAAyBN,EAAzB,iHAJS,gCAM3BE,EAASX,MANkB,2CAAH,sDASpBgB,EAAmB,mCAAG,oGACRV,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,WACzBI,EADyB,QAElBX,KAAKY,cAFa,yCAGrBC,QAAQC,OAAQ,IAAIC,MAAJ,qFAHK,gCAKxBJ,EAASX,MALe,2CAAH,qDAQnBiB,EAAkB,mCAAG,WAAQvB,GAAR,uFAETY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,oBAAiCa,EAAjC,oBAFS,UAE1BI,EAF0B,gDAIvBE,QAAQC,OAAQ,IAAIC,MAAJ,6DAAyBrB,EAAzB,sGAJO,cAMhCE,QAAQC,IAAIc,GANoB,kBAOzBA,GAPyB,2CAAH,sDAUlBO,EAAkB,mCAAG,WAAQxB,GAAR,uFAETY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,4BAAyCa,EAAzC,oBAFS,UAE1BI,EAF0B,gDAIvBE,QAAQC,OAAQ,IAAIC,MAAJ,6DAAyBrB,EAAzB,sGAJO,gCAOzBiB,EAASX,MAPgB,2CAAH,sDAUlBD,EAAkB,mCAAG,WAAQL,GAAR,uFAETY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,4BAAyCa,EAAzC,2BAFS,WAE1BI,EAF0B,QAGnBX,KAAKmB,YAHc,yCAIvBN,QAAQC,OAAQ,IAAIC,MAAJ,6DAAyBrB,EAAzB,sGAJO,gCAMzBiB,EAASX,MANgB,2CAAH,qD","sources":["components/Reviews/Reviews.js","service/api.js"],"sourcesContent":["\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMoviesReviews } from \"service/api\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { id } = useParams();\n    console.log(id);\n\n    useEffect(() => { \n          \n        async function getFetch (id) {\n            try {\n                const data = await fetchMoviesReviews(id);\n                setReviews( data.results );           \n            } catch (error) {\n                console.log(error)\n            } \n        };\n        getFetch(id);\n      }, [id]);\n      console.log(reviews);\n   \n    return (\n        <div>\n            <ul>\n            {reviews.map(({id, author, content }) => (\n                <li key={id}>\n                    <h3> Autor: { author } </h3>\n                    <p>{content}</p>\n                </li>\n            ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst KEY_API = \"70dafc4dedeb92246e41153ac2fb24f3\";\n\nexport const fetchMoviesWithQuery = async ( searchQuery, page = 1 ) => {\n  \n  const response = await axios.get(`search/movie?api_key=${KEY_API}&language=en-US&query=${searchQuery}&page=${page}&include_adult=false`);\n  if(!response.data.total_results) {\n    return Promise.reject( new Error( `По запиту \"${searchQuery}\" фільмів не знайдено` ));\n  };\n  return response.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/week?api_key=${KEY_API}`);\n    if(!response.data.total_results) {\n       return Promise.reject( new Error( `Помилка пошуку` ));\n    };\n    return response.data;\n  };\n  \nexport const fetchMoviesDetails = async ( id ) => {\n\n  const response = await axios.get(`movie/${id}?api_key=${KEY_API}&language=en-US`);\n  if(!response) {\n    return Promise.reject( new Error( `По запиту \"${id}\" фільмa не знайдено` ));\n  };\n  console.log(response)\n  return response;\n};\n\nexport const fetchMoviesCredits = async ( id ) => {\n\n  const response = await axios.get(`movie/${id}/credits?api_key=${KEY_API}&language=en-US`);\n  if(!response) {\n    return Promise.reject( new Error( `По запиту \"${id}\" фільмa не знайдено` ));\n  };\n  \n  return response.data;\n};\n\nexport const fetchMoviesReviews = async ( id ) => {\n\n  const response = await axios.get(`movie/${id}/reviews?api_key=${KEY_API}&language=en-US&page=1`);\n  if(!response.data.total_pages) {\n    return Promise.reject( new Error( `По запиту \"${id}\" фільмa не знайдено` ));\n  };\n  return response.data;\n};"],"names":["useState","reviews","setReviews","id","useParams","console","log","useEffect","fetchMoviesReviews","data","results","getFetch","map","author","content","axios","KEY_API","fetchMoviesWithQuery","searchQuery","page","response","total_results","Promise","reject","Error","fetchTrendingMovies","fetchMoviesDetails","fetchMoviesCredits","total_pages"],"sourceRoot":""}