{"version":3,"file":"static/js/513.172e3fd1.chunk.js","mappings":"wNAEaA,EAAYC,EAAAA,GAAAA,GAAH,oIAMTC,EAAcD,EAAAA,GAAAA,GAAH,mNAaXE,EAAYF,EAAAA,GAAAA,EAAH,sD,SCfTG,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,SAACC,GAAD,OACV,SAACP,EAAD,WACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAME,GAAnB,KAA0BC,MAAO,CAAEC,KAAMP,GAAjD,UACE,SAACH,EAAD,UAAYM,EAAMK,WAFJL,EAAME,GADd,KASjB,C,gHCSD,UAxBa,WACT,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE2BC,EAAAA,EAAAA,MAF3B,OAEcC,EAFd,OAGQH,EAAWG,EAAKC,SAChBC,QAAQC,IAAKH,EAAKC,SAJ1B,gDAMQC,QAAQC,IAAR,MANR,0DADY,uBAAC,WAAD,wBAUZC,EACD,GAAE,KAGD,iCACI,4CACA,SAAC,IAAD,CAAYlB,OAAQA,MAI/B,C,mMCzBDmB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAoB,mCAAG,WAAQC,GAAR,4FAAqBC,EAArB,+BAA4B,EAA5B,SAEXJ,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEE,EAAlE,iBAAsFC,EAAtF,yBAFW,WAE5BC,EAF4B,QAGrBV,KAAKW,cAHgB,yCAIzBC,QAAQC,OAAQ,IAAIC,MAAJ,6DAAyBN,EAAzB,iHAJS,gCAM3BE,EAASV,MANkB,2CAAH,sDASpBD,EAAmB,mCAAG,oGACRM,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,WACzBI,EADyB,QAElBV,KAAKW,cAFa,yCAGrBC,QAAQC,OAAQ,IAAIC,MAAJ,qFAHK,gCAKxBJ,EAASV,MALe,2CAAH,qDAQnBe,EAAkB,mCAAG,WAAQvB,GAAR,uFAETa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,oBAAiCc,EAAjC,oBAFS,UAE1BI,EAF0B,gDAIvBE,QAAQC,OAAQ,IAAIC,MAAJ,6DAAyBtB,EAAzB,sGAJO,cAMhCU,QAAQC,IAAIO,GANoB,kBAOzBA,GAPyB,2CAAH,sDAUlBM,EAAkB,mCAAG,WAAQxB,GAAR,uFAETa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,4BAAyCc,EAAzC,oBAFS,UAE1BI,EAF0B,gDAIvBE,QAAQC,OAAQ,IAAIC,MAAJ,6DAAyBtB,EAAzB,sGAJO,gCAOzBkB,EAASV,MAPgB,2CAAH,sDAUlBiB,EAAkB,mCAAG,WAAQzB,GAAR,uFAETa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,4BAAyCc,EAAzC,2BAFS,WAE1BI,EAF0B,QAGnBV,KAAKkB,YAHc,yCAIvBN,QAAQC,OAAQ,IAAIC,MAAJ,6DAAyBtB,EAAzB,sGAJO,gCAMzBkB,EAASV,MANgB,2CAAH,qD","sources":["components/MoviesList/MoviesList.stayled.js","components/MoviesList/MoviesList.js","page/Home.js","service/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.ul`\n  font: 18px \"Trebuchet MS\", \"Lucida Sans\";\n  width: 300px;\n  text-shadow: 0 1px 0 rgba(255,255,255,.5);\n`;\n\nexport const CardWrapper = styled.li`\n  a {\n    position: relative;\n    display: block;\n    padding: 0 ;\n    border-radius: .3em;\n    transition: .3s ease-out;\n    };\n    a:hover {\n      background: #E9E4E0;\n    };\n`;\n\nexport const MovieName = styled.p`\n  margin: 0;\n  pading: 4px;\n`;","import { Link, useLocation } from \"react-router-dom\";\nimport { Container, CardWrapper, MovieName } from \"./MoviesList.stayled\";\nimport PropTypes from 'prop-types';\n\n\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {movies.map((movie) => (\n        <CardWrapper key={movie.id}>\n          <Link to={`/movies/${movie.id} `} state={{ from: location }}>\n            <MovieName>{movie.title}</MovieName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired\n}","import { MoviesList } from \"components/MoviesList/MoviesList\"\nimport { useEffect, useState } from \"react\"\nimport { fetchTrendingMovies } from \"service/api\";\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {       \n        async function getFetch () {\n            try {\n                const data = await fetchTrendingMovies();\n                setMovies( data.results );  \n                console.log( data.results)           \n            } catch (error) {\n                console.log(error)\n            } \n        };\n        getFetch ();\n      }, [] );\n    \n    return (\n        <>\n            <h2>Trending today</h2>\n            <MoviesList movies={movies} />\n        </>\n        \n    )\n}\nexport default Home;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst KEY_API = \"70dafc4dedeb92246e41153ac2fb24f3\";\n\nexport const fetchMoviesWithQuery = async ( searchQuery, page = 1 ) => {\n  \n  const response = await axios.get(`search/movie?api_key=${KEY_API}&language=en-US&query=${searchQuery}&page=${page}&include_adult=false`);\n  if(!response.data.total_results) {\n    return Promise.reject( new Error( `По запиту \"${searchQuery}\" фільмів не знайдено` ));\n  };\n  return response.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/week?api_key=${KEY_API}`);\n    if(!response.data.total_results) {\n       return Promise.reject( new Error( `Помилка пошуку` ));\n    };\n    return response.data;\n  };\n  \nexport const fetchMoviesDetails = async ( id ) => {\n\n  const response = await axios.get(`movie/${id}?api_key=${KEY_API}&language=en-US`);\n  if(!response) {\n    return Promise.reject( new Error( `По запиту \"${id}\" фільмa не знайдено` ));\n  };\n  console.log(response)\n  return response;\n};\n\nexport const fetchMoviesCredits = async ( id ) => {\n\n  const response = await axios.get(`movie/${id}/credits?api_key=${KEY_API}&language=en-US`);\n  if(!response) {\n    return Promise.reject( new Error( `По запиту \"${id}\" фільмa не знайдено` ));\n  };\n  \n  return response.data;\n};\n\nexport const fetchMoviesReviews = async ( id ) => {\n\n  const response = await axios.get(`movie/${id}/reviews?api_key=${KEY_API}&language=en-US&page=1`);\n  if(!response.data.total_pages) {\n    return Promise.reject( new Error( `По запиту \"${id}\" фільмa не знайдено` ));\n  };\n  return response.data;\n};"],"names":["Container","styled","CardWrapper","MovieName","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","useEffect","fetchTrendingMovies","data","results","console","log","getFetch","axios","KEY_API","fetchMoviesWithQuery","searchQuery","page","response","total_results","Promise","reject","Error","fetchMoviesDetails","fetchMoviesCredits","fetchMoviesReviews","total_pages"],"sourceRoot":""}